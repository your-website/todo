{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","inputChange","event","target","value","setState","props","onSearchChange","style","fontSize","placeholder","onChange","this","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","type","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","addItem","clearLabel","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","before","slice","after","text","newItem","toggleProperty","searchTodo","items","toLowerCase","includes","arr","propName","oldItem","visibleItems","doneCount","length","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14fbc5aa.chunk.js","sourcesContent":["import AppHeader from './app-header.js';\r\nexport default AppHeader;","import React from 'react';\r\nimport './css/header.css';\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n  return (\r\n    <div className=\"header__container\">\r\n      <h1 className=\"header__content-title\">Todo List</h1>\r\n      <p className=\"header__paragraph\">{toDo} more to do, {done} done</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\n\r\nclass SearchPanel extends Component {\r\n  state = {\r\n    term: ''\r\n  };\r\n\r\n  inputChange = (event) => {\r\n    const term = event.target.value\r\n    this.setState(() => {\r\n      return {\r\n        term: term\r\n      };\r\n    });\r\n\r\n    this.props.onSearchChange(term);\r\n  };\r\n\r\n\r\n  render() {\r\n    const searchText = 'Type here to search';\r\n    const searchStyle = {\r\n      fontSize: '16px'\r\n    };\r\n    return <input className=\"search-panel form-control\"\r\n      style={searchStyle}\r\n      placeholder={ searchText }\r\n      onChange={ this.inputChange }\r\n      value={ this.state.term }/>;\r\n  }\r\n}\r\n\r\nexport default SearchPanel;","import TodoListItem from './todo-list-item';\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\nimport './style/todo-list-item.css';\r\n\r\nclass TodoListItem extends Component {\r\n\r\n  render() {\r\n    const { label, onDeleted, \r\n            onToggleImportant, \r\n            onToggleDone, \r\n            done, important } = this.props;\r\n\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n      classNames += ' todo-list-item_done';\r\n    };\r\n\r\n    if (important) {\r\n      classNames += ' todo-list-item_important';\r\n    };\r\n\r\n    return (\r\n      <span className={ classNames }>\r\n        <span \r\n          className=\"todo-list-item-label\" \r\n          onClick={ onToggleDone } >\r\n          { label } \r\n        </span>\r\n        <button type=\"button\" \r\n                className=\"btn btn-outline-danger btn-sm\"\r\n                onClick={ onDeleted }>\r\n          <i className=\"fa fa-trash-o\" />        \r\n        </button>\r\n        <button type=\"button\" \r\n                className=\"btn btn-outline-success btn-sm\"\r\n                onClick={ onToggleImportant }>\r\n          <i className=\"fa fa-exclamation\" />        \r\n        </button>\r\n      </span>\r\n    );\r\n  };\r\n};\r\n\r\nexport default TodoListItem;","import TodoList from './todo-list';\r\nexport default TodoList;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n  \r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n\r\n    return (\r\n      <li key={ id } className=\"list-group-item\">\r\n        <TodoListItem \r\n          { ...itemProps } \r\n          onDeleted={() => onDeleted(id) } \r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)} />\r\n      </li>\r\n    );\r\n  });\r\n   \r\n  return (\r\n    <ul className=\"todo-list\">\r\n      { elements }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\n\r\nclass ItemStatusFilter extends Component {\r\n\r\n  buttons = [\r\n    { name: 'all', label: 'All'},\r\n    { name: 'active', label: 'Active'},\r\n    { name: 'done', label: 'Done'},\r\n  ];\r\n\r\n  render() {\r\n    const { filter, onFilterChange } = this.props;\r\n    const buttons = this.buttons.map(({ name, label}) => {\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n      \r\n      return (\r\n        <button type=\"button\"\r\n                className={`btn ${clazz}`}\r\n                key={name}\r\n                onClick={ () => onFilterChange(name) }>\r\n          { label }\r\n        </button>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        { buttons }\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ItemStatusFilter;","import ItemAddForm from './item-add-form';\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\nimport './item-add-form.css';\r\n\r\nclass ItemAddForm extends Component {\r\n\r\n  state = {\r\n    label: ''\r\n  };\r\n\r\n  onLabelChange = (event) => {\r\n    this.setState({\r\n      label: event.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.label === '') {\r\n      return;\r\n    }\r\n    this.props.addItem(this.state.label);\r\n    this.clearLabel();\r\n  };\r\n\r\n  clearLabel = () => {\r\n    this.setState({\r\n      label: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { label } = this.state;\r\n\r\n    return (\r\n      <form className=\"item-add-form d-flex\"\r\n            onSubmit={ this.onSubmit }>\r\n        <input type=\"text\"\r\n               className=\"form-control\"\r\n               onChange={ this.onLabelChange }\r\n               placeholder=\"What needs to be done\" \r\n               value={ label }/>\r\n        <button className=\"btn btn-outline-primary text-nowrap\">\r\n          Add Item\r\n        </button>\r\n      </form>\r\n    );\r\n  };\r\n};\r\n\r\nexport default ItemAddForm;","import App from './app';\r\nexport default App;","import React, { Component } from 'react';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './css/app.css';\r\n\r\nclass App extends Component {\r\n\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Coffee'),\r\n      this.createTodoItem('Make Awesome App'),\r\n      this.createTodoItem('Have a lunch'),\r\n    ],\r\n    term: '',\r\n    filter: 'all'\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++,\r\n    };\r\n  };\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n      const before = todoData.slice(0, idx);\r\n      const after = todoData.slice(idx + 1);\r\n\r\n      const newArray = [...before, ...after];\r\n\r\n      return {\r\n        todoData: newArray\r\n      };\r\n    });\r\n  };\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ todoData }) => {\r\n      const newArray = [...todoData, newItem];\r\n\r\n      return {\r\n        todoData: newArray\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n    const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n\r\n    const before = arr.slice(0, idx);\r\n    const after = arr.slice(idx + 1);\r\n\r\n    return [...before, newItem, ...after];\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      };\r\n    });\r\n  };\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({ term });\r\n  };\r\n\r\n  searchTodo = (items, term) => {\r\n    if (term === '') {\r\n      return items;\r\n    };\r\n\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().includes(term.toLowerCase());\r\n    });\r\n  };\r\n\r\n  filter = (items, filter) => {\r\n    switch(filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    };\r\n  };\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  render() {\r\n    const { todoData, term, filter } = this.state;\r\n\r\n    const visibleItems = this.filter(\r\n      this.searchTodo(todoData, term), filter);\r\n\r\n    const doneCount = todoData\r\n                        .filter((el) => el.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"app\">\r\n          <AppHeader toDo={todoCount} done={doneCount} />\r\n          <div className=\"app__container\">\r\n              <SearchPanel onSearchChange={ this.onSearchChange } term={ term }  />\r\n              <ItemStatusFilter filter={ filter } \r\n                                onFilterChange={ this.onFilterChange }/>\r\n          </div>\r\n          <TodoList \r\n              todos={ visibleItems } \r\n              onDeleted={ this.deleteItem }\r\n              onToggleImportant={ this.onToggleImportant} \r\n              onToggleDone={ this.onToggleDone }/>\r\n          <ItemAddForm addItem={ this.addItem } />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app'\n\nReactDOM.render(<App />,\n    document.getElementById('root'));"],"sourceRoot":""}